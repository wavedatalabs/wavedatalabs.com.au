<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Wave Data Labs</title>
<link>https://wavedatalabs.com.au/posts/index.html</link>
<atom:link href="https://wavedatalabs.com.au/posts/index.xml" rel="self" type="application/rss+xml"/>
<description>Data Science and Statistical Consulting</description>
<generator>quarto-1.3.340</generator>
<lastBuildDate>Sun, 25 Jun 2023 14:00:00 GMT</lastBuildDate>
<item>
  <title>Why your data science projects are failing</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-06-26-failure/index.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>The most undervalued skill in delivering value with data science teams is picking projects that are likely to succeed. There is no shortcut - it takes years of hard earned experience.</p>
</blockquote>
<p>A number that seems to be floating around is 80% of data science projects will FAIL. Ouch.</p>
<p>Many of these types of numbers are ‘predictions’ from consultancies who stand to benefit from making big claims.</p>
<blockquote class="blockquote">
<p>“Through 2022, only 20% of analytic insights will deliver business outcomes.”</p>
</blockquote>
<p><a href="https://blogs.gartner.com/andrew_white/2019/01/03/our-top-data-and-analytics-predicts-for-2019/">https://blogs.gartner.com/andrew_white/2019/01/03/our-top-data-and-analytics-predicts-for-2019/</a></p>
<p>Cited reasons to fix this include:</p>
<ul>
<li>Getting better data</li>
<li>Getting a Data strategy and governance framework</li>
<li>Hiring smarter people</li>
<li>Something..something DataOps, AI</li>
</ul>
<p>These are all lovely ideas, but moving the lever on these are often impossible or impractical.</p>
<section id="so-what-are-some-easy-things-you-can-you-do" class="level2">
<h2 class="anchored" data-anchor-id="so-what-are-some-easy-things-you-can-you-do">So what are some easy things you can you do?</h2>
<ol type="1">
<li>Change your mindset (and how you run projects)</li>
</ol>
<p>Data analytics is an exploratory and scientific endeavour that isn’t supposed to succeed every time. Just like not all lab experiments yield positive results. Instead of lamenting failures, develop a mindset of innovation and agile working where new ideas are prototyped and investment in R&amp;D promoted but capped and balanced.</p>
<ol start="2" type="1">
<li>Pick better projects</li>
</ol>
<p>A question I get all the time, is how to get started with data science projects in an established business. Often there is a disconnect between those doing the work and those deciding what to do. The most undervalued skill in delivering value with data science teams is picking projects that are likely to succeed. There is no shortcut - it takes years of hard earned experience and it requires a balance of hands-on technical skills, with commercial awareness.</p>
</section>
<section id="how-can-we-help" class="level2">
<h2 class="anchored" data-anchor-id="how-can-we-help">How can we help?</h2>
<p>We have a dedicated program for businesses looking to get started or deepen their data analytics journey. We can help change your attitude and pick better projects.</p>
<p><a href="https://www.wavedatalabs.com.au/services/2023-06-20-dds/">Book in a Demo</a></p>


</section>

 ]]></description>
  <category>analysis</category>
  <guid>https://wavedatalabs.com.au/posts/2023-06-26-failure/index.html</guid>
  <pubDate>Sun, 25 Jun 2023 14:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-06-26-failure/featured.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Man vs Machine Learning</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/index.html</link>
  <description><![CDATA[ 




<p>Over the past few years I have been doing more and more work in Microsoft Azure and the Azure Machine Learning Studio. One feature of the Azure ML studio is an <a href="https://azure.microsoft.com/en-au/products/machine-learning/automatedml/#overview">automated machine learning feature</a>. This is essentially a no-code UI that ‘empowers professional and <em>nonprofessional</em> data scientists to build machine learning models rapidly’ (emphasis mine).</p>
<p>While many (including me) have leveled a fair amount of criticism towards such solutions, I thought it would be worth seeing what the fuss was about.</p>
<p>Could I go head-to-head on the same predictive modelling challenge and compete with the might of Microsoft’s AutoML solution? Even worse, would I enjoy it? Even more worse, could I win??</p>
<section id="time-series-forecasting-challenge" class="level1">
<h1>Time Series Forecasting Challenge</h1>
<p><strong>Objective</strong>: Create the most accurate time series forecasting model</p>
<p><strong>Data Source</strong>: Half-hourly electricity demand for Victoria, Australia<sup>1</sup></p>
<p><strong>Training data</strong>: 51,120 records from 2012-01-01 to 2014-11-30</p>
<p><strong>Test data</strong>: 1488 records from 2014-12-01 to 2014-12-31</p>
<p><strong>Method 1</strong>: Use Microsoft Azure’s <a href="https://azure.microsoft.com/en-au/products/machine-learning/automatedml/#overview">Automatic ML</a> product.</p>
<p><strong>Method 2</strong>: Hand code a statistical time series model in R</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">names</th>
<th style="text-align: left;">type</th>
<th style="text-align: left;">description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Time</td>
<td style="text-align: left;">datetime</td>
<td style="text-align: left;">Time stamp</td>
</tr>
<tr class="even">
<td style="text-align: left;">Demand</td>
<td style="text-align: left;">double</td>
<td style="text-align: left;">Target Variable: Electricity Demand</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Temperature</td>
<td style="text-align: left;">double</td>
<td style="text-align: left;">Temperature for the day</td>
</tr>
<tr class="even">
<td style="text-align: left;">Date</td>
<td style="text-align: left;">date</td>
<td style="text-align: left;">Date</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Holiday</td>
<td style="text-align: left;">logical</td>
<td style="text-align: left;">Was it a holiday date?</td>
</tr>
</tbody>
</table>
<p><img src="https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/plot_1.png" class="img-fluid"></p>
<section id="method-1-azure-automl" class="level2">
<h2 class="anchored" data-anchor-id="method-1-azure-automl">Method 1: Azure AutoML</h2>
<p>The process to set up a new AutoML job was very easy and assumes you are working under somewhat sanitized conditions (which I was in this case).</p>
<p><img src="https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/automl.png" class="img-fluid"></p>
<p>Once you kick it off, it chugged away for an hour and 33 minutes. To my horror, I realized it takes the ‘kitchen sink’ approach and fits a suite of 41 (!) different machine learning models at the training data. Hyperparameter tuning is done by constructing a validation set using K-Fold cross validation.</p>
<p><video src="models.webm" class="img-fluid" controls=""><a href="models.webm">Video</a></video></p>
<p>The best performing model is then selected and then predictions are run on the test set. It’s a little concerning that Test set evaluation is only in ‘Preview’ mode. It was also very confusing to dig out the results on the test set. Most of the metrics prominently displayed are overly confident in-sample accuracy results.</p>
<p>The winning model in my case was a ‘Voting Ensemble’ of three models</p>
<ul>
<li>MaxAbsScaler, ExtremeRandomTrees</li>
<li>StandardScalerWrapper, XGBoostRegressor<br>
</li>
<li>StandardScalerWrapper, LightGBM</li>
</ul>
<p>Overall the process was very easy and user friendly. It look a long time to train, but I didn’t have to think about anything - at all (which is usually time consuming) so overall it was a quick solution. I trained the model on a Standard_DS11_v2 (2 cores, 14 GB RAM, 28 GB disk) compute instance which costs $0.2 per hour. So it cost money, but not much.</p>
<p>Performance evaluation to follow below…</p>
</section>
<section id="method-2-manual-time-series-model-in-r" class="level2">
<h2 class="anchored" data-anchor-id="method-2-manual-time-series-model-in-r">Method 2: Manual Time Series Model in R</h2>
<p>The process for doing this myself involved much more thought and brain-effort. Here are some notes.</p>
<p>The data set is quite complicated as its sub-daily and has (probably) three seasonal periods (daily, weekly, yearly). There was also maybe some trend and outliers to deal with. The data set also contained covariates such as Temperature and Holiday indicators.</p>
<p>Due to the seasonal complexity many traditional statistical methods were not appropriate like straight ARIMA (autoregressive integrated moving average) and ETS (exponential smoothing). While STL (Seasonal and Trend decomposition using Loess) can handle multiple seasonal periods I wanted a method to handle the covariates (like Temperature and Holidays). My next step was to think of Time Series Linear Regression models. However, accounting for yearly seasonality with 30min data meant fitting 17,520 (2 * 24 * 365) parameters just for this seasonal period. Which seemed excessive.</p>
<p>For longer, multiple-seasonal periods, using Fourier terms can be a good idea. Here a smaller number of terms in a <a href="https://en.wikipedia.org/wiki/Fourier_series">fourier series</a> can be estimated to approximate a more complex function. This type of <em>Dynamic Harmonic Regression</em><sup>2</sup> can also handle exogenous covariates and we can even fit the model with ARIMA errors to account for the short term dynamics of time series data.</p>
<p>In fact, this very approach was outlined in the excellent <em>Forecasting: Principles and Practice</em><sup>3</sup> using this very same example data set. I decided to borrow (steal) the ideas of creating a piece-wise linear trend for temperature. I also went a bit crazy with encoding specific holiday dummy variables and some other tweaks.</p>
<p>Overall I found this method slow to fit, and not overly performant. I decided next to try fitting a Prophet<sup>4</sup> model. Prophet is an open-source automated algorithm for time series forecasting developed by Facebook. It uses a Bayesian framework to fit complex, non-linear, piece-wise regression models. For complex time series data, it provides a decent, fast framework including exogenous variables, holiday and seasonal effects. I didn’t do any principled hyperparameter tuning, but I did fiddle around with the model a bit.</p>
</section>
<section id="results" class="level2">
<h2 class="anchored" data-anchor-id="results">Results</h2>
<p>So who won?</p>
<p>The AutoML platform did :( , but only just. Below is the comparison of RMSE and MAPE. The AutoML is red, my predictions are in blue. I stuffed up over Christmas a bit, which admittedly is a tricky hold-out month for testing.</p>
<table class="table">
<thead>
<tr class="header">
<th>Method</th>
<th>Metric</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Azure AutoML</td>
<td>RMSE</td>
<td>213</td>
</tr>
<tr class="even">
<td>Azure AutoML</td>
<td>MAPE</td>
<td>3.56</td>
</tr>
<tr class="odd">
<td>Me</td>
<td>RMSE</td>
<td>274</td>
</tr>
<tr class="even">
<td>Me</td>
<td>MAPE</td>
<td>4.96</td>
</tr>
</tbody>
</table>
<p><img src="https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/plot_2.png" class="img-fluid"></p>
</section>
<section id="discussion" class="level2">
<h2 class="anchored" data-anchor-id="discussion">Discussion</h2>
<p>So overall it was pretty close, but in terms of pure predictive performance, the AutoML platform did pip me at the post. Admittedly, the solution I arrived at was probably more of an ML solution than a ‘classical’ time series method given it is still an automated algorithm. If I had more time and patience I probably could have pursued a more complex regression model. In fact in <em>Forecasting: Principles and Practice</em>, the authors also cite the performance of a straight Dynamic Harmonic Regression is limited, however they go on to propose other innovative approaches<sup>5</sup><sup>6</sup>, including splitting the problem into separate models for each 30min period and using regression splines to better capture exogenous effects. So it can be done, but not without a huge amount of effort.</p>
</section>
</section>
<section id="bonus-round-medicare-cost-forecast" class="level1">
<h1>Bonus Round: Medicare Cost Forecast</h1>
<p>This all led me to think: If the data are quite complex for a time series problem, then of course a more Machine Learn-y solution would outperform. I wonder what would happen if we repeated the same exercise but with many fewer data points and some quirky time series characteristics.</p>
<p>My hypothesis is, the machine learning models will not have sufficient data to fit well. On the other hand, my experience and gestalt will enable me to select and encode a statistical model that is appropriate and gain an edge on a black-box type of solution.</p>
<p><strong>Objective</strong>: Create the most accurate time series forecasting model</p>
<p><strong>Data Source</strong>: Monthly Medicare Australia prescription data<sup>7</sup>, Anatomical Therapeutic Chemical index classification A10</p>
<p><strong>Training data</strong>: 163 records from Jul 1991 to Jan 2005 (black line)</p>
<p><strong>Test data</strong>: 41 records from Feb 2005 to Jun 2008 (grey line)</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">names</th>
<th style="text-align: left;">type</th>
<th style="text-align: left;">description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Cost</td>
<td style="text-align: left;">double</td>
<td style="text-align: left;">Cost of the scripts in $AUD</td>
</tr>
<tr class="even">
<td style="text-align: left;">Month</td>
<td style="text-align: left;">double</td>
<td style="text-align: left;">Month time stamp</td>
</tr>
</tbody>
</table>
<p><img src="https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/plot_3.png" class="img-fluid"></p>
<p>Here we have less than 200 data points, but we can visually inspect the time series and see that there is a clear trend, the process is multiplicative and there is a single, yearly seasonal pattern.</p>
<section id="automl-solution" class="level2">
<h2 class="anchored" data-anchor-id="automl-solution">AutoML solution</h2>
<p>The AutoML platform again used a Voting Ensemble, churned out in 43 minutes, but this time using:</p>
<ul>
<li>ProphetModel (it must have copied me from last round ;))<br>
</li>
<li>Exponential Smoothing</li>
</ul>
<p><img src="https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/ml2.png" class="img-fluid"></p>
</section>
<section id="my-solution" class="level2">
<h2 class="anchored" data-anchor-id="my-solution">My solution</h2>
<p>Given the multiplicative process here, I modeled the log transformed data. (I did try a more generalized Box-Cox transformation, but got better performance with a straight natural log transform). I tried an ARIMA model, using model selection via the Hyndman-Khandakar algorithm<sup>8</sup>, which resulted in a <code>ARIMA(2,0,1)(1,1,2)[12] w/ drift&gt;</code>.</p>
</section>
<section id="results-1" class="level2">
<h2 class="anchored" data-anchor-id="results-1">Results</h2>
<p>Yay! I won this round. Quite easily.</p>
<table class="table">
<thead>
<tr class="header">
<th>Method</th>
<th>Metric</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Azure AutoML</td>
<td>RMSE</td>
<td>2.43</td>
</tr>
<tr class="even">
<td>Azure AutoML</td>
<td>MAPE</td>
<td>9.22</td>
</tr>
<tr class="odd">
<td>Me</td>
<td>RMSE</td>
<td>1.63</td>
</tr>
<tr class="even">
<td>Me</td>
<td>MAPE</td>
<td>7.23</td>
</tr>
</tbody>
</table>
<p><img src="https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/plot_4.png" class="img-fluid"></p>
</section>
</section>
<section id="who-is-the-winner" class="level1">
<h1>Who is the winner?</h1>
<p>Well, I call it a draw.</p>
<p>Here are some of my closing thoughts from this experiment.</p>
<p>An ML solution might be a good choice if:</p>
<ul>
<li>You have lots of data<br>
</li>
<li>You care a lot about prediction<br>
</li>
<li>You don’t have to be too transparent<br>
</li>
<li>Interpretation is not very important<br>
</li>
<li>You have a very complex time series data set</li>
</ul>
<p>I would caveat this with not just blindly modelling your problems away. You still need to understand the process to ensure your predictions are well calibrated and you don’t fall prey to over fitting.</p>
<p>A more classical statistical modelling approach might be a good choice if:</p>
<ul>
<li>You want a more flexible framework<br>
</li>
<li>You need to / want to encode domain knowledge<br>
</li>
<li>You want a more interpretable model</li>
<li>You have fewer data</li>
</ul>
<p>The good news is, if you are sufficiently smart and motivated (which I am sure you are) you can certainly compete in terms of model performance with an ML solution, even on complex problems. The bad news is, it’s harder and you need to think a bit. You can’t just delegate all your thinking to the machines. Not yet anyway.</p>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>O’Hara-Wild M, Hyndman R, Wang E, Godahewa R (2022). <em>tsibbledata: Diverse Datasets for ‘tsibble’</em>. https://tsibbledata.tidyverts.org/, https://github.com/tidyverts/tsibbledata/.</p>
<p>Hyndman, R.J., &amp; Athanasopoulos, G. (2021) Forecasting: principles and practice, 3rd edition, OTexts: Melbourne, Australia. OTexts.com/fpp3. Accessed on 2023-06-05.</p>
</section>
<section id="other" class="level2">
<h2 class="anchored" data-anchor-id="other">Other</h2>
<p>Thanks to the Tidyverts team <a href="https://tidyverts.org/">https://tidyverts.org/</a>. The new an improved time series stack in R makes all this so easy.</p>
<p><strong>Note</strong>: None of this was super-rigorous, and I certainly tilted the board in my favour here and there. It was just fun and a chance to play around with a tool that I have previously avoided for no real reason.</p>


</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Source: Australian Energy Market Operator; <em>tsibbledata</em> R package↩︎</p></li>
<li id="fn2"><p>Young, P. C., Pedregal, D. J., &amp; Tych, W. (1999). Dynamic harmonic regression. Journal of Forecasting, 18, 369–394. https://onlinelibrary.wiley.com/doi/10.1002/(SICI)1099-131X(199911)18:6%3C369::AID-FOR748%3E3.0.CO;2-K↩︎</p></li>
<li id="fn3"><p>Hyndman, R.J., &amp; Athanasopoulos, G. (2021) Forecasting: principles and practice, 3rd edition, OTexts: Melbourne, Australia. OTexts.com/fpp3. Accessed on 2023-06-05.↩︎</p></li>
<li id="fn4"><p>Taylor SJ, Letham B. 2017. Forecasting at scale. PeerJ Preprints 5:e3190v2 https://doi.org/10.7287/peerj.preprints.3190v2↩︎</p></li>
<li id="fn5"><p>Fan, S., &amp; Hyndman, R. J. (2012). Short-term load forecasting based on a semi-parametric additive model. IEEE Transactions on Power Systems, 27(1), 134–141. https://ieeexplore.ieee.org/document/5985500↩︎</p></li>
<li id="fn6"><p>Hyndman, R. J., &amp; Fan, S. (2010). Density forecasting for long-term peak electricity demand. IEEE Transactions on Power Systems, 25(2), 1142–1153. https://ieeexplore.ieee.org/document/5345698↩︎</p></li>
<li id="fn7"><p>Source: Medicare Australia; <em>tsibbledata</em> R package↩︎</p></li>
<li id="fn8"><p>Hyndman, R. J., &amp; Khandakar, Y. (2008). Automatic time series forecasting: The forecast package for R. Journal of Statistical Software, 27(1), 1–22. https://doi.org/10.18637/jss.v027.i03↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Azure</category>
  <guid>https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/index.html</guid>
  <pubDate>Thu, 01 Jun 2023 14:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-06-02-man-vs-ml/featured.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Level up your Forecasting</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index.html</link>
  <description><![CDATA[ 




<p>This is a time series data set of half-hourly electricity demand for Victoria, Australia <sup>1</sup>. You may not care about electricity forecasting, but there is probably some similar time series in your organisation you do care about.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><strong>What is the forecast demand for the next week?</strong></p>
<p>Who knows? I certainly don’t know, despite doing forecasting for a job.</p>
<p>In fact, anyone who tells you they do know (with certainty) is wrong.</p>
<section id="but-i-need-to-make-a-forecast-so-what-do-i-do" class="level2">
<h2 class="anchored" data-anchor-id="but-i-need-to-make-a-forecast-so-what-do-i-do">But I need to make a forecast, so what do I do?</h2>
<p>Often you have to come up with something. Finance needs an estimate of sales or budgets, or your manager needs something to take to the board. So you have to churn out some numbers. But what numbers?</p>
<p>Here are two extremes:</p>
<ol type="1">
<li>You could ignore all historical data and just use the most recent data point as the most reliable forecast.<br>
</li>
<li>You could ignore any specific value and just take the average of everything.</li>
</ol>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Both are in the ballpark but they aren’t very squiggly like the real data. They clearly aren’t capturing the <em>seasonality</em>.</p>
<p>You could be lazy (clever) and just use the same time period from <em>last</em> week as your current forecast. It actually looks really good. But it’s just one, fixed realization of what could happen. Will it play out exactly like your forecast? <em>Exactly</em> like last week? Almost certainly not.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Let’s simulate another way history could play out. (By statistically resampling the residuals in the training data)</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>And another</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>And 20 more:</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>So instead of blindly relying on one (kind of okay looking, but totally unrealistic) forecast, we now have a ‘fuzzy’ region of plausible values.</p>
</section>
<section id="ok-but-why-bother" class="level2">
<h2 class="anchored" data-anchor-id="ok-but-why-bother">Ok but why bother?</h2>
<p>If you don’t know with certainty what your forecast is going to be, then don’t just give one concrete number. It’s misleading.</p>
<blockquote class="blockquote">
<p>Its more important to know how uncertain your forecast is rather than what your forecast is.</p>
</blockquote>
<p>You can still pull out a mean or point estimate but by delivering the whole story you are conveying not just what you think is likely to happen, but how certain you are about it.</p>
<p>Often this can lead to more meaningful discussions. Perhaps it’s not the mean of your forecast distribution that you care about, its the extreme values. For example, If I was stress testing business cash flows and forecasting the cost of a maintenance activity, I’d be more interested in forecasting the 95% upper limit of forecast costs rather than the ‘expected’ cost.</p>
<p>In practice, you often don’t have to do any mathematical simulations. Proper time series forecasts have methods to calculate prediction intervals out of the box (see below).</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="spoiler" class="level2">
<h2 class="anchored" data-anchor-id="spoiler">Spoiler</h2>
<p>Want to know what actually happened? Here it is in red.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>A huge criticism of providing probabilistic forecasts is that is seems like you are ‘hedging your bets’ and being evasive. The reality is, in our electricity example, it was just very hot and demand surged (much higher than even our 95% prediction interval). So if it’s realistic and plausible to see forecast values in these ranges (or even more extreme) - Why wouldn’t you want to include that information in your forecast??</p>
</section>
<section id="aside" class="level2">
<h2 class="anchored" data-anchor-id="aside">Aside</h2>
<p>In practice a statistician will likely use a more sophisticated model than presented here. These models may take into account temperature and other factors but there will still be unexplained variance that will need to be quantified if you want a quality forecast produced.</p>
<p><strong>If you or your organisation want to get serious about making proper forecasts and being proactive when making critical decisions - <a href="https://www.wavedatalabs.com.au/contact/">drop me a line</a>, I can help.</strong></p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>O’Hara-Wild M, Hyndman R, Wang E, Godahewa R (2022). <em>tsibbledata: Diverse Datasets for ‘tsibble’</em>. https://tsibbledata.tidyverts.org/, https://github.com/tidyverts/tsibbledata/.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Source: Australian Energy Market Operator. <em>tsibbledata</em> R package.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>statistics</category>
  <guid>https://wavedatalabs.com.au/posts/2023-05-29-forecasting/index.html</guid>
  <pubDate>Sun, 28 May 2023 14:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-05-29-forecasting/featured.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Random Number Generator Testing</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-05-18-RNG-Testing/index.html</link>
  <description><![CDATA[ 




<p>We had really interesting discussion with a company recently who needed a random number generator certified.</p>
<p>Randomness, like time or space, is one of these deep concepts that are super hard to reason about. Despite this, it’s fairly common to see random number generators in practice. A casino will use one in their gaming software to randomise outcomes; A lottery or competition website will use one to pick winners; Scientists use them to run simulations and cryptographic applications are powered by some form of randomness.</p>
<p>Flash back to the 1980’s where down-on-his-luck unemployed ice cream man Michael Larsen cracked the (non-random) pattern in TV game show <em>Press Your Luck</em> and took them for over $100k. Sadly it <a href="https://web.archive.org/web/20170712041017/http://www.rotten.com/library/conspiracy/press-your-luck/">didnt end well for Larsen</a> with Ponzi schemes, radio station challenges awry and a break and enter. But it goes to show what can happen if you don’t take randomness seriously.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-18-RNG-Testing/larsen.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Game show wizz and ice cream man Michael Larsen</figcaption>
</figure>
</div>
<section id="aside-ok-but-what-is-random-and-who-is-ramsey" class="level2">
<h2 class="anchored" data-anchor-id="aside-ok-but-what-is-random-and-who-is-ramsey">(Aside) Ok but what is random? And who is Ramsey?</h2>
<p>Randomness is an actual or apparent lack of pattern, but it’s kind of hard to test and even its very nature is somewhat unclear. In 1903, a British mathematician called <a href="https://en.wikipedia.org/wiki/Frank_Ramsey_(mathematician)">Frank Ramsey</a> was born. Ramsey was a militant atheist, but interestingly his brother went on to become Archbishop of Canterbury. He went on to study mathematics and economics, becoming a student of famous economist John Maynard Keynes. Somehow he ended up also translating a German book of logical philosophy into English and joined a <a href="https://en.wikipedia.org/wiki/Cambridge_Apostles">secret intellectual society</a> just after the war. A minor discovery of his ended up blossoming into what is known as Ramsey theory, which is a theory in mathematical combinatorics showing that in any sufficiently large system, however disordered, there is always <em>some</em> order. This has had interesting (and conspiratorial) implications for whether there is even such a thing as ‘random’. Oh and by the way, all this happened before he died at age 26 after complications from liver disease likely caused by swimming in a river.</p>
</section>
<section id="types-of-random-number-generators-rngs" class="level2">
<h2 class="anchored" data-anchor-id="types-of-random-number-generators-rngs">Types of Random Number Generators (RNGs)</h2>
<p>Generally RNG’s can generate <strong>True</strong> random numbers or <strong>Pseudo</strong> random numbers. True RNGs generate random bits from natural stochastic sources like background radiation, quantum effects, atmospheric noise etc. Next time you are tempted to toss a coin, perhaps head over to <a href="random.org">random.org</a> instead for some ‘true’ randomness.</p>
<p>There is a fun <a href="https://www.random.org/history/">history lesson</a> for how random.org got started with true RNG’s generated using random static from a cheap $10 radio, laden with a post-it note advising passers by not to fiddle with the knobs.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wavedatalabs.com.au/posts/2023-05-18-RNG-Testing/random.jpg" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Early true RNG using atmospheric noise from a cheap radio</figcaption>
</figure>
</div>
<p>Pseudo-random numbers are generated using a ‘seed’ that deterministically produces numbers that look random, but can be entirely reproduced from the initial seed condition. This is often useful (and used by me all the time) when you need a random sample, but you need it to replicated exactly for scientific reproducibility purposes.</p>
</section>
<section id="statistical-tests" class="level2">
<h2 class="anchored" data-anchor-id="statistical-tests">Statistical Tests</h2>
<p>Given randomness itself is hard to test, there are a number of statistical test suites that perform a battery of diagnostics on a large sample of random numbers in order to test various aspects of randomness. One prominent test suite for cryptographic random bits is developed by <a href="https://www.nist.gov/">NIST</a> which uses <a href="https://csrc.nist.gov/publications/detail/sp/800-22/rev-1a/final">15 different statistical tests.</a></p>
<ol type="1">
<li>The Frequency (Monobit) Test</li>
<li>Frequency Test within a Block</li>
<li>The Runs Test</li>
<li>Tests for the Longest-Run-of-Ones in a Block</li>
<li>The Binary Matrix Rank Test</li>
<li>The Discrete Fourier Transform (Spectral) Test</li>
<li>The Non-overlapping Template Matching Test</li>
<li>The Overlapping Template Matching Test</li>
<li>Maurer’s “Universal Statistical” Test</li>
<li>The Linear Complexity Test</li>
<li>The Serial Test</li>
<li>The Approximate Entropy Test</li>
<li>The Cumulative Sums (Cusums) Test</li>
<li>The Random Excursions Test</li>
<li>The Random Excursions Variant Test</li>
</ol>
<p>So, like much of the mathematics behind every day scenarios there is a fascinating history and deep technical and philosophical implications. Given what is on the line for organisations relying on randomness, its useful to engage a specialist to help run and interpret these test suites.</p>
<p>And remember, if you get it wrong, someone unemployed ice-cream man is just waiting to swoop in and take advantage.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>statistics</category>
  <guid>https://wavedatalabs.com.au/posts/2023-05-18-RNG-Testing/index.html</guid>
  <pubDate>Thu, 18 May 2023 14:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-05-18-RNG-Testing/featured.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Deploy Your Own R Data Science Lab in the Cloud</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/index.html</link>
  <description><![CDATA[ 




<p>In a previous post I linked to a project that makes it easy to deploy and extend an existing <a href="https://rocker-project.org/">Rocker Project</a> Docker image to quickly set up a fully featured RStudio Server environment locally on your machine.</p>
<p>Here I’ll cover some options to deploy this environment to the cloud so you can access it anywhere.</p>
<section id="option-1-deploy-to-a-virtual-machine" class="level2">
<h2 class="anchored" data-anchor-id="option-1-deploy-to-a-virtual-machine">Option 1: Deploy to a Virtual Machine</h2>
<p>A common pattern is to create a Virtual Machine (VM) with a cloud service provider (such as AWS, Azure, GCP) and run your code there. I’ll cover an example using Microsoft Azure.</p>
<ol type="1">
<li>Deploy a VM with an Ubuntu operating system. Go ahead and choose the compute power you need.</li>
</ol>
<p><img src="https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/rstudio-rg.png" class="img-fluid"></p>
<ol start="2" type="1">
<li>Configure a custom network rule to allow traffic on port 8787 for RStudio</li>
</ol>
<p><img src="https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/nsg.png" class="img-fluid"><br>
3. Log into your new VM terminal using SSH</p>
<p><img src="https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/term.png" class="img-fluid"></p>
<ol start="3" type="1">
<li><p>Install Docker Engine by following <a href="https://docs.docker.com/engine/install/ubuntu/">these steps</a></p></li>
<li><p>Clone and Deploy the docker container from Step 2 <a href="https://github.com/deanmarchiori/ds-env-setup">in my guide.</a></p></li>
</ol>
</section>
<section id="option-2-deploy-using-azure-app-service" class="level2">
<h2 class="anchored" data-anchor-id="option-2-deploy-using-azure-app-service">Option 2: Deploy using Azure App Service</h2>
<p>The above is fine, but arguably if you are setting up a VM from scratch for development purposes I’m not sure what benefit there is from using a docker container. You may as well just directly install what you want and consider the VM a ‘container’.</p>
<p>However, if you plan to make this available to other users in your organisation, or to adapt this guide for Shiny App development you may be interested in other features such as TLS/SSL security, scale up, advanced networking, continuous integration, continuous deployment, staging/production deployment slots etc. This represents a shift from development sandpit to ‘web app’. For this case, <a href="https://azure.microsoft.com/en-au/products/app-service/">Azure App Service</a> may be a lower hassle option. This is Microsoft’s enterprise grade, web app deployment managed service.</p>
<p>In the <strong>Virtual Machine</strong> model you are setting up compute infrastructure, deploying and running containers directly - then fiddling with the infrastructure layer for everything else. In <strong>App Service</strong> you deploy your custom docker container (here containing RStudio Server) to Azure Container Registry (kind of like DockerHub). Azure App Services then builds and serves your app from there - without you having to stand up and manage an Infra layer directly.</p>
<p><img src="https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/appservices.png" class="img-fluid"></p>
<ol type="1">
<li><p>Create Azure Container Registry (ACR) (or some other Docker repository) using this <a href="https://learn.microsoft.com/en-us/azure/app-service/tutorial-custom-container?tabs=azure-portal&amp;pivots=container-linux#ii-create-a-container-registry">help guide</a></p></li>
<li><p>Run and test your container locally</p></li>
<li><p>Deploy your local container to ACR using this <a href="https://learn.microsoft.com/en-us/azure/app-service/tutorial-custom-container?tabs=azure-portal&amp;pivots=container-linux#iii-push-the-sample-image-to-azure-container-registry">help guide</a></p></li>
<li><p>Create a new web app in Azure App Services using this <a href="https://learn.microsoft.com/en-us/azure/app-service/tutorial-custom-container?tabs=azure-portal&amp;pivots=container-linux#v-create-the-web-app">help guide</a></p></li>
<li><p>Configuration:</p></li>
</ol>
<ul>
<li>I didn’t have to fiddle with ports, presumably it reads the exposed ports in the docker file and does this magically.<br>
</li>
<li>For custom environment variables like the RStudio Server password, I had to manually add this in the config section.</li>
</ul>
<p><img src="https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/env.png" class="img-fluid"></p>
<p>and it worked just fine:</p>
<p><img src="https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/deploy.png" class="img-fluid"></p>


</section>

 ]]></description>
  <category>R</category>
  <category>azure</category>
  <guid>https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/index.html</guid>
  <pubDate>Sat, 25 Mar 2023 13:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-03-17-deploy-your-own-rstudio-server-in-the-cloud/featured.png" medium="image" type="image/png" height="75" width="144"/>
</item>
<item>
  <title>Building your own R Data Science Lab in the browser</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-03-17-building-your-own-r-data-science-lab/index.html</link>
  <description><![CDATA[ 




<p>Most R users probably just run <a href="https://posit.co/download/rstudio-desktop/">RStudio Desktop</a> from Posit on their local computers. This involves manually installing R, RStudio and all other packages.</p>
<p>However it is often the case that users are operating in a restricted computing environment, such as in a corporate or government setting. Alternatively you may wish to create a custom development environment to test or replicate some other specific setup. This is a good case to move away from locally managed software to containerization, such as Docker.</p>
<p>I have set up a <a href="https://github.com/deanmarchiori/ds-env-setup">Github repository</a> that sets up a local data science development environment in the browser.</p>
<p>It builds a docker container including:</p>
<ul>
<li>Ubuntu 20.04 LTS</li>
<li>R version 4.2</li>
<li>RStudio Server 2022.02.3+492</li>
<li>All tidyverse packages and devtools</li>
<li>tex &amp; publishing-related package</li>
</ul>
<p>The image builds on the rocker/verse image from <a href="https://rocker-project.org/">Rocker Project.</a></p>
<p>Some other enhanced configuration options are included in the Dockerfile, such as preloading you RStudio preferences to get the same look and feel you have locally, the option to install other CRAN packages &amp; mounting local volumes to persist your work locally.</p>
<p>Go here for Step by step instructions:</p>
<p><a href="https://github.com/deanmarchiori/ds-env-setup">https://github.com/deanmarchiori/ds-env-setup</a></p>



 ]]></description>
  <category>R</category>
  <category>docker</category>
  <guid>https://wavedatalabs.com.au/posts/2023-03-17-building-your-own-r-data-science-lab/index.html</guid>
  <pubDate>Tue, 14 Mar 2023 13:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-03-17-building-your-own-r-data-science-lab/featured.png" medium="image" type="image/png" height="84" width="144"/>
</item>
<item>
  <title>Beware of Boundaries in Binominal Proportion Confidence Intervals</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-03-13-choosing-the-right-binomial-confidence-interval/index.html</link>
  <description><![CDATA[ 




<p>Binomial proportion confidence intervals are often employed when attempting to perform tests for significance, or sample size calculations around sample measurements resulting from a <a href="https://en.wikipedia.org/wiki/Bernoulli_process">Bernoulli process.</a></p>
<p>The typical choice when calculating binomial proportion confidence intervals is the asymptotic, or normally approximated ‘Wald’ interval where success probability is measured by:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Chat%7Bp%7D%20%5Cpm%20z_%7B%5Calpha/2%7D%5Csqrt%7B%5Cfrac%7B%5Chat%7Bp%7D(1-%5Chat%7Bp%7D)%7D%7Bn%7D%7D%0A"></p>
<p>In many settings, such as marketing analytics or manufacturing processes the sample proportion is close to 0 or 1. Evaluating asymptotic confidence intervals near these boundary conditions will lead to underestimation of the error, and in some cases producing an interval outside <img src="https://latex.codecogs.com/png.latex?%5B0,%201%5D">.</p>
<p>Fortunately other methods exist, such as Wilson’s score interval, exact methods and Bayesian approaches. The recommendation here is to examine the probability coverage and explore alternative methods for sample size and CI calculation, especially when the parameter is near the boundary conditions, or in cases of very small n.&nbsp;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(binom)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"></span>
<span id="cb1-4">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb1-5">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_df</span>(p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.f =</span>  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binom.confint</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> .x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">methods =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'all'</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(x))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(mean, method), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbarh</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> upper, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> method), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A variety of binomial confidence interval methods for p = 0.01, 0.5 &amp; 0.99"</span>,</span>
<span id="cb3-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Note unusual behaviour near 0.01 and 0.99"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-03-13-choosing-the-right-binomial-confidence-interval/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">cov <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_df</span>(p, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binom.coverage</span>(.x, n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all"</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cov, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(p))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(coverage, method), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(p)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability coverage for a variety of binomial confidence interval methods"</span>,</span>
<span id="cb5-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reference line at 0.95 coverage"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-03-13-choosing-the-right-binomial-confidence-interval/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>A good discussion is contained in:</p>
<p>Wallis, Sean A. (2013). “Binomial confidence intervals and contingency tests: mathematical fundamentals and the evaluation of alternative methods” (PDF). <strong>Journal of Quantitative Linguistics.</strong> 20 (3): 178–208. doi:10.1080/09296174.2013.799918. S2CID 16741749.</p>
<p>https://en.wikipedia.org/wiki/Binomial_proportion_confidence_interval</p>



 ]]></description>
  <category>R</category>
  <category>statistics</category>
  <guid>https://wavedatalabs.com.au/posts/2023-03-13-choosing-the-right-binomial-confidence-interval/index.html</guid>
  <pubDate>Sun, 12 Mar 2023 13:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-03-13-choosing-the-right-binomial-confidence-interval/featured.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>When should you be using the Hypergeometric distribution in practice?</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-02-20-when-should-you-be-using-the-hypergeometric-distribution-in-practice/index.html</link>
  <description><![CDATA[ 




<p>We have a manufacturing process in the day job that is subject to sample auditing.</p>
<p>There are <img src="https://latex.codecogs.com/png.latex?N"> widgets produced and we need to audit <img src="https://latex.codecogs.com/png.latex?n"> of them. Some sort of rejection threshold is needed on that sample to decide if the whole batch of widgets has met a specified quality level.</p>
<p>Typically, a <a href="https://en.wikipedia.org/wiki/Binomial_distribution">binomial distribution</a> would be appropriate for measuring the probability of <img src="https://latex.codecogs.com/png.latex?k"> successes (in this case defects found) in <img src="https://latex.codecogs.com/png.latex?n"> independent trials with probability <img src="https://latex.codecogs.com/png.latex?p">.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0APr(X=k)%20=%20%7Bn%20%5Cchoose%20k%7D%20p%5Ek(1-p)%5E%7Bn-k%7D%0A"></p>
<p>The word <em>independent</em> is doing a lot of work here as it implies that we are sampling <em>with</em> replacement in order to maintain a fixed probability parameter <img src="https://latex.codecogs.com/png.latex?p">.</p>
<p>In cases where you are taking draws from a population <em>without</em> replacement (such as when you do destructive inspections on a widget) the underlying population changes with each draw and so does the probability <img src="https://latex.codecogs.com/png.latex?p">.</p>
<p>In this case, modelling the process using a <a href="https://en.wikipedia.org/wiki/Hypergeometric_distribution">hypergeometric distribution</a> may be a more appropriate choice.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0APr(X=k)%20=%20%5Cfrac%7B%7BK%20%5Cchoose%20k%7D%7BN-K%20%5Cchoose%20n-k%7D%7D%7B%7BN%20%5Cchoose%20n%7D%7D%0A"></p>
<p>It similarly describes the probability of <img src="https://latex.codecogs.com/png.latex?k"> successes in <img src="https://latex.codecogs.com/png.latex?n"> draws without replacement. However, instead of specifying a parameter <img src="https://latex.codecogs.com/png.latex?p">, we provide the population size <img src="https://latex.codecogs.com/png.latex?N">, which contains <img src="https://latex.codecogs.com/png.latex?K"> success states in the population.</p>
<section id="example" class="level2">
<h2 class="anchored" data-anchor-id="example">Example</h2>
<p>Let’s say we have 2000 widgets manufactured and we want to sample 50 (ignore why 50, that is a whole separate question). We have an assumed quality level of 10% defective units (which we define as ‘success’ for complicated reasons).</p>
<p>Q: Based on a sample of 50 widgets how many defective units would be considered unlikely (95% CI) to occur randomly given our assumed quality level, and therefore result in us rejecting the entire batch?</p>
<p>We can compare the binomial probability mass function with the hypergeometric and observe they are essentially the same.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb2-2">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq.int</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb2-3">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binomial =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbinom</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>),</span>
<span id="cb2-4">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hypergeom_2000 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dhyper</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1800</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>),</span>
<span id="cb2-5">       ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'distribution'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'density'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, density, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> distribution)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed defective units in sample"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-20-when-should-you-be-using-the-hypergeometric-distribution-in-practice/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>However, if we had a smaller population of say 100 or 70 widgets, how would this compare?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb3-2">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq.int</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb3-3">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binomial =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbinom</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>),</span>
<span id="cb3-4">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hypergeom_2000 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dhyper</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1800</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>),</span>
<span id="cb3-5">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hypergeom_100 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dhyper</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>),</span>
<span id="cb3-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hypergeom_070 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dhyper</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb3-7">       ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'distribution'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'density'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x, density, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> distribution)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed defective units in sample"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-20-when-should-you-be-using-the-hypergeometric-distribution-in-practice/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We can see these curves are markedly different. And indeed the 95% confidence intervals obtained are narrower for the hypergeometric case.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 9</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qhyper</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2 8</code></pre>
</div>
</div>
<p>We can see from a random draw of 1 million samples from each PMF that they both have the same expected values, but the variance is smaller in the hypergeometric case.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb8-2">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rhyper</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nn =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(X)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4.999079</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(X)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4.498633</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Y)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5.000942</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(Y)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2.273265</code></pre>
</div>
</div>
</section>
<section id="does-it-matter-which-one-you-use" class="level2">
<h2 class="anchored" data-anchor-id="does-it-matter-which-one-you-use">Does it matter which one you use?</h2>
<p>As a consequence of removing samples in each draw we influence the probability of a subsequent success. If our <img src="https://latex.codecogs.com/png.latex?N"> and <img src="https://latex.codecogs.com/png.latex?K"> is very large relative to our sample <img src="https://latex.codecogs.com/png.latex?n"> this wont make much of an impact, but it can be impactful for smaller populations, or relatively larger samples.</p>
<p>From our example above, failing to use a hypergeometric distribution to model this process for smaller populations will result in wider, more conservative acceptance regions which can increase consumer risk in a manufacturing process.</p>
<p>Typical guidance on when to use each distribution is given in manufacturing standards such as <em>AS 1199.1-2003: Sampling Procedures for Inspection by Attributes</em> and typically involves how you structure your sampling scheme.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>statistics</category>
  <guid>https://wavedatalabs.com.au/posts/2023-02-20-when-should-you-be-using-the-hypergeometric-distribution-in-practice/index.html</guid>
  <pubDate>Sun, 19 Feb 2023 13:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-02-20-when-should-you-be-using-the-hypergeometric-distribution-in-practice/featured.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Prediction Intervals for Linear Mixed Effects Models</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index.html</link>
  <description><![CDATA[ 




<p>A recent project with repeated measures data involved fitting a random intercept term, and eventually making predictions for new groups not in the training sample. Importantly there was a need for individual predictions rather than population mean level predictions. Now, you obviously cannot include the random effect for a level that is not in your data, so the idea was to make a population level prediction with an adequate prediction interval that reflected the variation from both the fixed and random effects. This is complicated.</p>
<p>In the help page for <code>lme4::predict.merMod()</code> is the following note:</p>
<blockquote class="blockquote">
<ul>
<li>There is no option for computing standard errors of predictions because it is difficult to define an efficient method that incorporates uncertainty in the variance parameters; we recommend bootMer for this task.</li>
</ul>
</blockquote>
<p>There are some useful resources out there but it took a while to track down, so this post may serve as a good reference in the future.</p>
<p>Let’s go through an example using the famous <code>sleepstudy</code> data showing the average reaction time per day (in milliseconds) for subjects in a sleep deprivation study.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lme4)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sleepstudy"</span>)</span></code></pre></div>
</div>
<section id="linear-model" class="level2">
<h2 class="anchored" data-anchor-id="linear-model">Linear Model</h2>
<p>We would like to model the relationship between <code>Reaction</code> and <code>Days</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(sleepstudy, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, Reaction)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Fitting a basic linear model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">fit_lm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit_lm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = Reaction ~ Days, data = sleepstudy)

Residuals:
     Min       1Q   Median       3Q      Max 
-110.848  -27.483    1.546   26.142  139.953 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  251.405      6.610  38.033  &lt; 2e-16 ***
Days          10.467      1.238   8.454 9.89e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 47.71 on 178 degrees of freedom
Multiple R-squared:  0.2865,    Adjusted R-squared:  0.2825 
F-statistic: 71.46 on 1 and 178 DF,  p-value: 9.894e-15</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(sleepstudy, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, Reaction)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>But this ignores the fact these data are not independent. We have multiple observation per subject. Some look like a good fit, others not.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(sleepstudy, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, Reaction, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> Subject)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>Subject) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="linear-mixed-effects-model" class="level2">
<h2 class="anchored" data-anchor-id="linear-mixed-effects-model">Linear Mixed Effects Model</h2>
<p>Let’s add a random intercept term for <code>Subject</code>. For simplicity we will leave out any other random effects.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lme4<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear mixed model fit by REML ['lmerMod']
Formula: Reaction ~ Days + (1 | Subject)
   Data: sleepstudy

REML criterion at convergence: 1786.5

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-3.2257 -0.5529  0.0109  0.5188  4.2506 

Random effects:
 Groups   Name        Variance Std.Dev.
 Subject  (Intercept) 1378.2   37.12   
 Residual              960.5   30.99   
Number of obs: 180, groups:  Subject, 18

Fixed effects:
            Estimate Std. Error t value
(Intercept) 251.4051     9.7467   25.79
Days         10.4673     0.8042   13.02

Correlation of Fixed Effects:
     (Intr)
Days -0.371</code></pre>
</div>
</div>
<p>New fitted lines can be drawn, showing the adjusted intercept for each subject (original regression line kept for reference).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">sleepstudy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re.form =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, Reaction, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> Subject)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, pred), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>Subject) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="bootstrapped-prediction-intervals-observed-data" class="level2">
<h2 class="anchored" data-anchor-id="bootstrapped-prediction-intervals-observed-data">Bootstrapped Prediction Intervals (observed data)</h2>
<p>Let’s try and generate prediction intervals using <code>lme4::bootMer()</code> as suggested.</p>
<p>First on the in-sample data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict function for bootstrapping</span></span>
<span id="cb10-2">predfn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(.) {</span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata=</span>new, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re.form=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb10-4">}</span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># summarise output of bootstrapping</span></span>
<span id="cb10-7">sumBoot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(merBoot) {</span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(</span>
<span id="cb10-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fit =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(merBoot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))),</span>
<span id="cb10-10">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(merBoot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">025</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))),</span>
<span id="cb10-11">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(merBoot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">975</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)))</span>
<span id="cb10-12">    )</span>
<span id="cb10-13">  )</span>
<span id="cb10-14">}</span>
<span id="cb10-15"></span>
<span id="cb10-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'new' data</span></span>
<span id="cb10-17">new <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sleepstudy</span></code></pre></div>
</div>
<p>Notes:</p>
<ol type="1">
<li><p>In the <code>predict()</code> function we specify <code>re.form=NULL</code> which identifies which random effects to condition on. Here <code>NULL</code> includes all random effects. Obviously here you can compute individual predictions assuming you feed it with the correct grouping level in your data.</p></li>
<li><p>In the <code>lme4::bootMer()</code> function we set <code>use.u=TRUE</code>. This conditions on the random effects and only provides uncertainly estimates for the i.i.d. errors resulting from the fixed effects of the model.</p></li>
</ol>
<blockquote class="blockquote">
<p>If use.u is TRUE and type==“parametric”, only the i.i.d. errors are resampled, with the values of u staying fixed at their estimated values.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">boot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lme4<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootMer</span>(fit, predfn, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nsim=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use.u=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parametric"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">new <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sumBoot</span>(boot)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, Reaction, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> Subject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Subject)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, fit), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> lwr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> upr), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>Subject) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="dealing-with-unobserved-data" class="level2">
<h2 class="anchored" data-anchor-id="dealing-with-unobserved-data">Dealing with unobserved data</h2>
<p>However, this gets complicated if we want to make predictions for <em>new</em> subjects.</p>
<p>We can no longer condition on the random effects, as the new subject level will not have a fitted random intercept value. Instead we need to effectively make a population level prediction (i.e.&nbsp;set the random effect to zero.). This makes sense as we don’t know what the random effect ought to be for a given, unobserved subject.</p>
<p>But we don’t want the prediction interval to just cover the uncertainty in the population level estimate. If we are interested in individual predictions, how can we incorporate the uncertainly of the random effects in the prediction intervals?</p>
<p>Lets generate a new, unobserved subject.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">new_subject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb13-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Days =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,</span>
<span id="cb13-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Subject =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"999"</span>)</span>
<span id="cb13-4">  )</span></code></pre></div>
</div>
<p>We provide a new predict function that doesn’t condition on the random effects by using <code>re.form = ~0</code>. This lets us input and obtain predictions for new subjects.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">predfn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(.) {</span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata=</span>new_subject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re.form=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">allow.new.levels=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb14-3">}</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">new_subject <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predfn</span>(fit)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> Subject)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>However using <code>predict</code> just results in a completely deterministic prediction as shown above.</p>
<p>An alternative approach is to use <code>lme4::simulate()</code> which will simulate responses for subjects non-deterministically using the fitted model object.</p>
<p>Below we can see a comparison on both approaches.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">predfn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(.) {</span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata=</span>new_subject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re.form=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">allow.new.levels=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb16-3">}</span>
<span id="cb16-4"></span>
<span id="cb16-5">sfun <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(.) {</span>
<span id="cb16-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata=</span>new_subject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re.form=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">allow.new.levels=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb16-7">}</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">new_subject <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simulated =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sfun</span>(fit)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predfn</span>(fit)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"val"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, val, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> type)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We can use this <code>simulate()</code> function in our bootstrapping to resample responses from the fitted model (rather than resampling deterministic population predictions).</p>
<p>This time we set <code>use.u=FALSE</code> to provide uncertainly estimates from both the model errors and the random effects.</p>
<blockquote class="blockquote">
<p>If use.u is FALSE and type is “parametric”, each simulation generates new values of both the “spherical” random effects uu and the i.i.d. errors , using rnorm() with parameters corresponding to the fitted model x.</p>
</blockquote>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">boot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lme4<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootMer</span>(fit, sfun, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nsim=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use.u=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parametric"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">new_subject <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sumBoot</span>(boot)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predfn</span>(fit)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> Subject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Subject)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, fit), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> lwr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> upr), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>So while we don’t have a conditional mode of the random effect (because its a new subject) we can derive a bootstrapped estimate of the prediction interval by resampling the random effects and model errors on simulated data values.</p>
</section>
<section id="aside" class="level2">
<h2 class="anchored" data-anchor-id="aside">Aside</h2>
<p>For comparison, here is what the same prediction interval would look like if we just used an unconditional population prediction. While the overall gist is the same, despite also resampling both the random effects and the i.i.d. errors, the interval is narrower as it is resampling just the deterministic population predictions of the model.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">boot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lme4<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootMer</span>(fit, predfn, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nsim=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use.u=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parametric"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">new_subject <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sumBoot</span>(boot)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predfn</span>(fit)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, predicted, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> Subject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Subject)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> fit_lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Days, fit), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> lwr, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> upr), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Most of the material and code is taken from a variety of sources below. In particular the lme4 github issue. Also, the <code>merTools</code> package has a nice vignette comparing these methods with their own solution.</p>
<p>https://tmalsburg.github.io/predict-vs-simulate.html https://github.com/lme4/lme4/issues/388 https://cran.r-project.org/web/packages/merTools/vignettes/Using_predictInterval.html http://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#predictions-andor-confidence-or-prediction-intervals-on-predictions</p>


</section>

 ]]></description>
  <category>R</category>
  <category>statistics</category>
  <guid>https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/index.html</guid>
  <pubDate>Sun, 05 Feb 2023 13:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2023-02-06-prediction-intervals-for-linear-mixed-effects-models/featured.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Running Shiny in a Docker container</title>
  <dc:creator>Dean Marchiori</dc:creator>
  <link>https://wavedatalabs.com.au/posts/2022-01-17-running-shiny-in-a-docker-container/index.html</link>
  <description><![CDATA[ 




<p>Basic minimal example for running shiny in Docker. It is assumed you have Docker installed.</p>
<section id="structure" class="level1">
<h1>Structure</h1>
<p>Our directory contains a folder called <code>myapp</code> which contains our shiny app file and other supporting files.</p>
<p>At the top level we have our dockerfile and other config files. These should be modified accordingly.</p>
<p>This directory structure can be cloned from my <a href="https://github.com/deanmarchiori/dockerised-shiny">github repo</a></p>
<pre><code>dockerised-shiny/
├── Dockerfile
├── myapp
│&nbsp;&nbsp; └── app.R
├── README.md
├── shiny-server.conf
└── shiny-server.sh
</code></pre>
<section id="dockerfile" class="level2">
<h2 class="anchored" data-anchor-id="dockerfile">Dockerfile</h2>
<p>This should be adapted as required.</p>
<pre><code># Using rocker/rver::version, update version as appropriate
FROM rocker/r-ver:3.5.0

# install dependencies
RUN apt-get update &amp;&amp; apt-get install -y \
    sudo \
    gdebi-core \
    pandoc \
    pandoc-citeproc \
    libcurl4-gnutls-dev \
    libcairo2-dev \
    libxt-dev \  
    libxml2-dev \  
    libssl-dev \  
    wget


# Download and install shiny server
RUN wget --no-verbose https://download3.rstudio.org/ubuntu-14.04/x86_64/VERSION -O "version.txt" &amp;&amp; \
    VERSION=$(cat version.txt)  &amp;&amp; \
    wget --no-verbose "https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-$VERSION-amd64.deb" -O ss-latest.deb &amp;&amp; \
    gdebi -n ss-latest.deb &amp;&amp; \
    rm -f version.txt ss-latest.deb &amp;&amp; \
    . /etc/environment &amp;&amp; \
    R -e "install.packages(c('shiny', 'rmarkdown'), repos='$MRAN')" &amp;&amp; \
    cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/

# Copy configuration files into the Docker image
COPY shiny-server.conf  /etc/shiny-server/shiny-server.conf
COPY shiny-server.sh /usr/bin/shiny-server.sh

# Copy shiny app to Docker image
COPY /myapp /srv/shiny-server/myapp

# Expose desired port
EXPOSE 80

CMD ["/usr/bin/shiny-server.sh"] 
</code></pre>
</section>
</section>
<section id="build" class="level1">
<h1>Build</h1>
<p>To build the Docker image (called <code>myapp</code>)</p>
<pre><code>docker build -t myapp .</code></pre>
</section>
<section id="run" class="level1">
<h1>Run</h1>
<p>To run a container based on our Docker image:</p>
<p>This will run the docker image ‘myapp’ in a container (in detached mode) and expose post 80. It will name it ‘myapp’ and remove it when exited.</p>
<pre><code>docker run --rm -p 80:80 --name myapp -d myapp</code></pre>
</section>
<section id="use" class="level1">
<h1>Use</h1>
<p>http://127.0.0.1/myapp/</p>
</section>
<section id="some-helpful-commands" class="level1">
<h1>Some helpful commands</h1>
<section id="list-images" class="level2">
<h2 class="anchored" data-anchor-id="list-images">List Images</h2>
<pre><code>docker images </code></pre>
</section>
<section id="list-all-containers" class="level2">
<h2 class="anchored" data-anchor-id="list-all-containers">List All Containers</h2>
<pre><code>docker ps -a</code></pre>
</section>
<section id="remove-containers" class="level2">
<h2 class="anchored" data-anchor-id="remove-containers">Remove Containers</h2>
<p>For individual containers add the container ID</p>
<pre><code>$ docker rm</code></pre>
<p>To remove all exited containers :</p>
<pre><code>$ docker rm $(docker ps -a -q -f status=exited)</code></pre>
</section>
<section id="system-prune" class="level2">
<h2 class="anchored" data-anchor-id="system-prune">System Prune</h2>
<p>Remove all unused containers, networks, images (both dangling and unreferenced), and optionally, volumes.</p>
<pre><code>docker system prune -a</code></pre>
</section>
<section id="save-as-tar-archive" class="level2">
<h2 class="anchored" data-anchor-id="save-as-tar-archive">Save as tar-archive</h2>
<pre><code>docker save -o ~/myapp.tar myapp</code></pre>
</section>
<section id="load-and-run-archive" class="level2">
<h2 class="anchored" data-anchor-id="load-and-run-archive">Load and Run Archive</h2>
<pre><code>docker load -i myapp.tar
docker run myapp</code></pre>
</section>
</section>
<section id="more-info-and-references" class="level1">
<h1>More info and References</h1>
<p>https://github.com/deanmarchiori/dockerised-shiny https://hub.docker.com/r/rocker/shiny<br>
https://www.docker.com/get-started<br>
https://www.bjoern-hartmann.de/post/learn-how-to-dockerize-a-shinyapp-in-7-steps/</p>


</section>

 ]]></description>
  <category>R</category>
  <category>analysis</category>
  <guid>https://wavedatalabs.com.au/posts/2022-01-17-running-shiny-in-a-docker-container/index.html</guid>
  <pubDate>Sun, 16 Jan 2022 13:00:00 GMT</pubDate>
  <media:content url="https://wavedatalabs.com.au/posts/2022-01-17-running-shiny-in-a-docker-container/featured.png" medium="image" type="image/png" height="37" width="144"/>
</item>
</channel>
</rss>
